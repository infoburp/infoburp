/*** Generated by streamline 0.4.0 (callbacks) - DO NOT EDIT ***/
var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename);
/*     1 */ (function() {
/*     2 */   var Path;
/*     4 */   module.exports = Path = (function() {
/*     5 */     var get, set, _this = this;
/*     8 */     function Path(start, end, length, nodes, relationships) {
/*     9 */       this._start = start;
/*    10 */       this._nodes = nodes;
/*    11 */       this._length = length;
/*    12 */       this._relationships = relationships;
/*    13 */       this._end = end;
                };
/*    20 */     get = function(props) {
/*    21 */       var getter, name, _results;
/*    22 */       _results = [];
/*    23 */       for (name in props) {
/*    24 */         getter = props[name];
/*    25 */         _results.push(Path.prototype.__defineGetter__(name, getter));
                  };
/*    27 */       return _results;
                };
/*    30 */     set = function(props) {
/*    31 */       var name, setter, _results;
/*    32 */       _results = [];
/*    33 */       for (name in props) {
/*    34 */         setter = props[name];
/*    35 */         _results.push(Path.prototype.__defineSetter__(name, setter));
                  };
/*    37 */       return _results;
                };
/*    44 */     get({
/*    45 */       start: function() {
/*    46 */         return (this._start || null);
                  }
                });
/*    50 */     get({
/*    51 */       end: function() {
/*    52 */         return (this._end || null);
                  }
                });
/*    56 */     get({
/*    57 */       length: function() {
/*    58 */         return (this._length || 0);
                  }
                });
/*    62 */     get({
/*    63 */       nodes: function() {
/*    64 */         return (this._nodes || []);
                  }
                });
/*    68 */     get({
/*    69 */       relationships: function() {
/*    70 */         return (this._relationships || []);
                  }
                });
/*    74 */     return Path;
/*    76 */   }).call(this);
/*    78 */ }).call(this);
