/*** Generated by streamline 0.4.0 (callbacks) - DO NOT EDIT ***/
var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename),__func=__rt.__func,__cb=__rt.__cb,__tryCatch=__rt.__tryCatch;
/*     1 */ (function() {
/*     2 */   var PropertyContainer, Relationship, adjustError, status, util, __hasProp = {
/*     3 */   }.hasOwnProperty, __extends = function(child, parent) {
/*     4 */     for (var key in parent) {
/*     4 */       if (__hasProp.call(parent, key)) {
/*     4 */         child[key] = parent[key];
                  };
                };
/*     4 */     function ctor() {
/*     4 */       this.constructor = child;
                };
/*     4 */     ctor.prototype = parent.prototype;
/*     4 */     child.prototype = new ctor();
/*     4 */     child.__super__ = parent.prototype;
/*     4 */     return child;
              };
/*     6 */   status = require("http-status");
/*     8 */   util = require("./util");
/*    10 */   adjustError = util.adjustError;
/*    12 */   PropertyContainer = require("./PropertyContainer");
/*    14 */   module.exports = Relationship = (function(_super) {
/*    15 */     var get, set, _this = this;
/*    18 */     __extends(Relationship, _super);
/*    20 */     function Relationship(db, data, start, end) {
/*    21 */       var Node;
/*    22 */       Relationship.__super__.constructor.call(this, db, data);
/*    23 */       Node = require("./Node");
/*    24 */       this._start = (start || new Node(db, {
/*    25 */         self: data.start
                  }));
/*    27 */       this._end = (end || new Node(db, {
/*    28 */         self: data.end
                  }));
                };
/*    36 */     get = function(props) {
/*    37 */       var getter, name, _results;
/*    38 */       _results = [];
/*    39 */       for (name in props) {
/*    40 */         getter = props[name];
/*    41 */         _results.push(Relationship.prototype.__defineGetter__(name, getter));
                  };
/*    43 */       return _results;
                };
/*    46 */     set = function(props) {
/*    47 */       var name, setter, _results;
/*    48 */       _results = [];
/*    49 */       for (name in props) {
/*    50 */         setter = props[name];
/*    51 */         _results.push(Relationship.prototype.__defineSetter__(name, setter));
                  };
/*    53 */       return _results;
                };
/*    60 */     get({
/*    61 */       start: function() {
/*    62 */         return (this._start || null);
                  }
                });
/*    66 */     get({
/*    67 */       end: function() {
/*    68 */         return (this._end || null);
                  }
                });
/*    72 */     get({
/*    73 */       type: function() {
/*    74 */         return this._data.type;
                  }
                });
/*    81 */     Relationship.prototype.save = function Relationship_prototype_save__1(_) {
                  var response, __this = this;
                  var __frame = {
                    name: "Relationship_prototype_save__1",
                    line: 81
                  };
                  return __func(_, this, arguments, Relationship_prototype_save__1, 0, __frame, function __$Relationship_prototype_save__1() {
                    return (function ___(__then) {
                      (function ___(_) {
                        __tryCatch(_, function __$Relationship_prototype_save__1() {
/*    84 */               return __this._request.put({
/*    85 */                 uri: (("" + __this.self) + "/properties"),
/*    86 */                 json: __this.data
                          }, __cb(_, __frame, 3, 19, function ___(__0, __1) {
/*    84 */                 response = __1;
/*    88 */                 if ((response.statusCode !== status.NO_CONTENT)) {
/*    89 */                   switch (response.statusCode) {
/*    90 */                   case status.BAD_REQUEST:
/*    90 */                     return _(new Error("Invalid data sent"));
/*    91 */                   case status.NOT_FOUND:
/*    93 */                     return _(new Error("Relationship not found"));
/*    94 */                     default:
/*    96 */                     return _(response);
/*    97 */                   };
                            }
                          ;
                            return _(null, __this);
                          }, true));
                        });
                      })(function ___(error, __result) {
                        __tryCatch(_, function __$Relationship_prototype_save__1() {
                          if (error) {
/*   102 */                 return _(adjustError(error));
                          }
                           else {
                            _(null, __result);
                          }
                        ;
                        });
                      });
                    })(function ___() {
                      __tryCatch(_, _);
                    });
                  });
                };
/*   106 */     Relationship.prototype.index = function Relationship_prototype_index__2(index, key, value, _) {
                  var encodedKey, encodedValue, response, services, url, version, __this = this;
                  var __frame = {
                    name: "Relationship_prototype_index__2",
                    line: 106
                  };
                  return __func(_, this, arguments, Relationship_prototype_index__2, 3, __frame, function __$Relationship_prototype_index__2() {
                    return (function ___(__then) {
                      (function ___(_) {
                        __tryCatch(_, function __$Relationship_prototype_index__2() {
/*   109 */               if (!__this.exists) {
/*   110 */                 return _(new Error("Relationship must exists before indexing properties"));
                          }
                        ;
/*   112 */               return __this.db.getServices(__cb(_, __frame, 6, 19, function ___(__0, __1) {
/*   112 */                 services = __1;
/*   113 */                 return __this.db.getVersion(__cb(_, __frame, 7, 18, function ___(__0, __2) {
/*   113 */                   version = __2;
                              return (function __$Relationship_prototype_index__2(__then) {
/*   114 */                     if ((version <= 1.4)) {
/*   115 */                       encodedKey = encodeURIComponent(key);
/*   116 */                       encodedValue = encodeURIComponent(value);
/*   117 */                       url = ((((((("" + services.relationship_index) + "/") + index) + "/") + encodedKey) + "/") + encodedValue);
/*   118 */                       return __this._request.post({
/*   119 */                         url: url,
/*   120 */                         json: __this.self
                                  }, __cb(_, __frame, 12, 21, function ___(__0, __3) {
/*   118 */                         response = __3;
                                    __then();
                                  }, true));
                                }
                                 else {
/*   123 */                       return __this._request.post({
/*   124 */                         url: ((("" + services.relationship_index) + "/") + index),
/*   125 */                         json: {
/*   126 */                           key: key,
/*   127 */                           value: value,
/*   128 */                           uri: __this.self
                                    }
                                  }, __cb(_, __frame, 17, 21, function ___(__0, __4) {
/*   123 */                         response = __4;
                                    __then();
                                  }, true));
                                }
                              ;
                              })(function __$Relationship_prototype_index__2() {
/*   132 */                     if ((response.statusCode !== status.CREATED)) {
/*   133 */                       return _(response);
                                }
                              ;
                                __then();
                              });
                            }, true));
                          }, true));
                        });
                      })(function ___(error, __result) {
                        __tryCatch(_, function __$Relationship_prototype_index__2() {
                          if (error) {
/*   136 */                 return _(adjustError(error));
                          }
                           else {
                            _(null, __result);
                          }
                        ;
                        });
                      });
                    })(function ___() {
                      __tryCatch(_, _);
                    });
                  });
                };
/*   140 */     return Relationship;
/*   142 */   }).call(this, PropertyContainer);
/*   144 */ }).call(this);
